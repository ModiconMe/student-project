Базовые команды
1) git status
2) git add . или имя_файла
3) git commit (-m - коммент, -am - коммент+add если нету новых файлов)
4) git remote add origin "https//..."
5) git remote show origin - просмотр удаленных репозиториев
6) git remote rename pb paul - переименование pb -> paul
7) git remote remove paul - удаление уделенного репозитория paul
8) git remote - просмотр списка удаленных репозиториев
9) git remote -v - репозитории + их адреса
10) git push origin main - пуш изменений
11) git fetch - скачивание данных с удаленного репозитория (-v - показывает изменения)
12) git pull origin main - git fetch + git commit
13) git clone "https//..." или путь на компе

Команды для отмены
1) git checkout . или имя_файла - для возвращения к состоянию последнего коммита
2) git reset HEAD . или имя_файла - для удаления файлов из add
3) git reset --hard HEAD~числов_коммитов - удаления n последних коммитов
4) git push -f - удаления удаленных коммитов (при условии что локально они удалены)

Команды для работы с branch
1) git branch - просмотр списка branch (-v показывает последние коммиты всех бранчейь, -avv - удаленные ветки)
2) git branch имя_branch - создание новой ветки (-b - создание и переключение на новую ветку)
3) git checkout имя_branch - переключение между ветками
4) git branch -d имя_branch - удалить ветку
5) git stash - сохраняет файлы для того чтобы можно было переключатся по веткам
6) git stash pop - вытаскивает файлы обратно для того чтобы их можно было закоммитить
7) git push --set-upstream origin имя_branch - создание+пуш нового бранча на удаленных репозиторий

Команды для слияния веток
Если ветка из которой нужно подгрузить изменения уделенная, то сначала делаем git pull
1) git merge main - подтягиваем изменения из ветки main в нашу текущую ветку
(git fetch -v -> git checkout <master> -> git pull (conflict) -> git checkout <local_branch> -> git merge <master> (conflict))

pull request - запрос на слияние ветки разработки с основной веткой.