2022-09-28 09:07:52 INFO  SaveStudentOrder:24 - log
2022-09-28 09:07:52 DEBUG StudentOrderDAOImplTest:20 - DB is start
2022-09-28 09:07:52 DEBUG StudentOrderDAOImpl:65 - student order: StudentOrder{studentOrderID=10, husband=Adult{passportSeries='1010', passportNumber='100010', issueDate=2017-09-05, issueDepartment='PassportOffice{officeId=1, officeAreaId='', officeName=''}', universityName='University{universityId=2, universityName=''}', studentID='HH12345'} Person{surname='Popov', givenName='Dmitry', patronymic='Olegovich', dateOfBirth=1995-03-18, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}, wife=Adult{passportSeries='2010', passportNumber='200010', issueDate=2018-04-05, issueDepartment='PassportOffice{officeId=2, officeAreaId='', officeName=''}', universityName='University{universityId=1, universityName=''}', studentID='WW12345'} Person{surname='Popova', givenName='Polina', patronymic='Igorevna', dateOfBirth=1997-08-21, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}, children=[Child{certificateNumber='300010', issueDate=2018-06-11, issueDepartment='RegisterOffice{officeId=2, officeAreaId='', officeName=''}'} Person{surname='Popova', givenName='Yulia', patronymic='Dmitryevna', dateOfBirth=2016-01-11, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}, Child{certificateNumber='400010', issueDate=2018-07-19, issueDepartment='RegisterOffice{officeId=3, officeAreaId='', officeName=''}'} Person{surname='Popov', givenName='Yuri', patronymic='Dmitryev', dateOfBirth=2018-10-11, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}], marriageCertificate='123456010', marriageDate=2016-07-04, marriageOffice='RegisterOffice{officeId=1, officeAreaId='', officeName=''}'}
2022-09-28 09:07:52 DEBUG StudentOrderDAOImpl:65 - student order: StudentOrder{studentOrderID=10, husband=Adult{passportSeries='1010', passportNumber='100010', issueDate=2017-09-05, issueDepartment='PassportOffice{officeId=1, officeAreaId='', officeName=''}', universityName='University{universityId=2, universityName=''}', studentID='HH12345'} Person{surname='null', givenName='Dmitry', patronymic='Olegovich', dateOfBirth=1995-03-18, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}, wife=Adult{passportSeries='2010', passportNumber='200010', issueDate=2018-04-05, issueDepartment='PassportOffice{officeId=2, officeAreaId='', officeName=''}', universityName='University{universityId=1, universityName=''}', studentID='WW12345'} Person{surname='Popova', givenName='Polina', patronymic='Igorevna', dateOfBirth=1997-08-21, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}, children=[Child{certificateNumber='300010', issueDate=2018-06-11, issueDepartment='RegisterOffice{officeId=2, officeAreaId='', officeName=''}'} Person{surname='Popova', givenName='Yulia', patronymic='Dmitryevna', dateOfBirth=2016-01-11, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}, Child{certificateNumber='400010', issueDate=2018-07-19, issueDepartment='RegisterOffice{officeId=3, officeAreaId='', officeName=''}'} Person{surname='Popov', givenName='Yuri', patronymic='Dmitryev', dateOfBirth=2018-10-11, address=Address{postcode='195000', street='Street{streetCode=1, streetName='First street'}', building='10', extension='2', apartment='121'}}], marriageCertificate='123456010', marriageDate=2016-07-04, marriageOffice='RegisterOffice{officeId=1, officeAreaId='', officeName=''}'}
2022-09-28 09:07:52 ERROR StudentOrderDAOImpl:99 - ОШИБКА: значение NULL в столбце "h_sur_name" отношения "jc_student_order" нарушает ограничение NOT NULL
  Подробности: Ошибочная строка содержит (2, 0, 2000-08-14 14:12:55, null, Dmitry, Olegovich, 1995-03-18, 1010, 100010, 2017-09-05, 1, 195000, 1, 10, 2, 121, 2, HH12345, Popova, Polina, Igorevna, 1997-08-21, 2010, 200010, 2018-04-05, 2, 195000, 1, 10, 2, 121, 1, WW12345, 123456010, 2016-07-04, 1).
org.postgresql.util.PSQLException: ОШИБКА: значение NULL в столбце "h_sur_name" отношения "jc_student_order" нарушает ограничение NOT NULL
  Подробности: Ошибочная строка содержит (2, 0, 2000-08-14 14:12:55, null, Dmitry, Olegovich, 1995-03-18, 1010, 100010, 2017-09-05, 1, 195000, 1, 10, 2, 121, 2, HH12345, Popova, Polina, Igorevna, 1997-08-21, 2010, 200010, 2018-04-05, 2, 195000, 1, 10, 2, 121, 1, WW12345, 123456010, 2016-07-04, 1).
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:356)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:496)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:413)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:190)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:152)
	at edu.javacourse.student_order.dao.StudentOrderDAOImpl.saveStudentOrder(StudentOrderDAOImpl.java:84)
	at edu.javacourse.student_order.dao.StudentOrderDAOImplTest.saveStudentOrderError(StudentOrderDAOImplTest.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
